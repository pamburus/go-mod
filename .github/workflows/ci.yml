name: CI

on:
  pull_request:
  push:
    branches:
      - "main"
      - "master"

env:
  GO_VERSION: 1.23
  GOLANGCI_LINT_VERSION: v1.61

jobs:
  detect-modules:
    name: Detect go modules
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: "**/*.sum"
      - id: set-modules
        run: echo "modules=$(go work edit -json | jq -c -r '[.Use[].DiskPath | sub("^\\./"; "")]')" >> $GITHUB_OUTPUT

  lint:
    name: Run golangci-lint
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: "**/*.sum"
      - name: golangci-lint ${{ matrix.module }}
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: ${{ matrix.module }}

  test:
    name: Run unit tests
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: "**/*.sum"
      - name: Test
        run: go test -race -coverprofile=.cover.out -coverpkg=./...
        working-directory: ${{ matrix.module }}
      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v4
        with:
          files: ${{ matrix.module }}/.cover.out
          flags: ${{ matrix.module }}
        env: 
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: List files
        run: ls -lah
        working-directory: ${{ matrix.module }}
      - name: Collect to coveralls
        uses: coverallsapp/github-action@v2
        with:
          parallel: true
          file: ${{ matrix.module }}/.cover.out
          base-path: ${{ matrix.module }}
          flag-name: ${{ matrix.module }}

  finish:
    name: Check the results
    runs-on: ubuntu-latest
    needs: [lint, test, detect-modules]
    if: ${{ always() }}
    steps:
      - name: Check if all jobs passed
        run: |
          needs_json='${{ toJSON(needs) }}'
          job_names=$(echo "$needs_json" | jq -r 'keys[]')
          failed_jobs=()
          for job in $job_names; do
            job_status=$(echo "$needs_json" | jq -r '."'${job}'".result')
            if [ "$job_status" != "success" ]; then
              failed_jobs+=($job)
            fi
          done
          if [ ${#failed_jobs[@]} -ne 0 ]; then
            echo "The following jobs failed: ${failed_jobs[@]}"
            exit 1
          else
            echo "All jobs passed."
          fi
      - name: Upload coverage to coveralls
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
          carryforward: "${{ join(fromJSON(needs.detect-modules.outputs.modules), ',') }}"
